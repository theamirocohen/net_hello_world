
trigger:
- main

pool:
  name: agent_pool_hdo4
  demands: agent.name -equals hdo4

stages:
- stage: SonarQubeScan
  jobs:
  - job: CodeAnalysis
    steps:
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'sonar-qube'  # Use the new generic connection name
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'your-project-key'
        cliProjectName: 'Your Project'
        cliProjectVersion: '$(Build.BuildNumber)'
        extraProperties: |
          sonar.host.url=http://20.74.82.244:9000
          sonar.login=$(SONAR_TOKEN)

- stage: Build
  displayName: "Build Stage"
  jobs:
  - job: Build
    steps:
    # - task: SonarQubePrepare@7
    #   inputs:
    #     SonarQube: 'sonar-qube'
    #     scannerMode: 'dotnet'
    #     projectKey: 'azure_net'
    #     extraProperties: |
    #       sonar.branch.name=
    - script: echo "Starting Build..."
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '9.0.105'
    - script: dotnet build
      displayName: "Build the projects"
    - script: dotnet pack
      displayName: "Package the project"
    - script: echo "Build Number $(Build.BuildNumber)"
      displayName: "Print Build Number"
    - script: echo "Branch Name $(Build.SourceBranchName)"
      displayName: "Print Branch Name"
    # - task: SonarQubeAnalyze@7
    #   inputs:
    #     jdkversion: 'JAVA_HOME_17_X64'
    # - task: SonarQubePublish@7
    #   inputs:
    #     pollingTimeoutSec: '300'

- stage: Test
  displayName: "Test Stage"
  condition: succeeded() # Runs only if the Build stage succeeds
  jobs:
  - job: TestJob
    steps:
    - script: echo "Running Unit Tests..."
    - script: dotnet test
      displayName: "Execute Tests"

- stage: Deploy
  displayName: "Deploy Stage"
  condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/main'), succeeded())
  jobs:
  - job: DeployJob
    steps:
    - script: echo "Deploying application..."
    - script: echo "Deployment completed!"

- stage: Notify
  displayName: "Notify Stage"
  condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/main'), succeeded())
  jobs:
  - job: Notify
    steps:
    - script: |
        echo "Branch: $(Build.SourceBranchName), Version: $(Build.BuildNumber)" | mailx -s "build notification" theamirocohen@gmail.com
      displayName: "Send Email with Build Details"







    # - script: dotnet nuget push bin/*.nupkg --source https://pkgs.dev.azure.com/theamirocohen/_packaging/hdo4_feed_temp/nuget/v3/index.json --api-key $(System.AccessToken)
#   displayName: 'Push to Azure Artifacts'

 
